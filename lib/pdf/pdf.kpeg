%% name = Pdf::Parser

%% pre-class {
  
}
   
%% {

  include Pdf::NodeHelper

}

# %% header = ast Header(version)
# %% integer = ast Integer(number)
# %% float = ast Float(number)
# %% namespace = ast Namespace(lang, namespace)
# %% array = ast Array(elements)
# %% name = ast Name(value)
# %% strlit= ast String(value)
# %% dictionary = ast Dictionary(content)
# %% dictionary_pair = ast Map(name,value)
# %% bool_true = ast True()
# %% bool_false = ast False()
# %% xref = ast XRef(offset)
# %% pdf = ast Pdf(header,trailer)
# %% comment = ast Comment(text)

PERCENT = "%"
SP = " "
CR = "\r"
LF = "\n"
TAB = "\t"
DASH = "-"
NL = "\n"
PERIOD = "."
ZERO = "0"
ONE_THROUGH_NINE = "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
SLASH = "/"
AMP = "&"
STAR = "*"
DIGIT = /[0-9]/
PLUS = "+"
EOL = CR LF | CR |  LF
SPACE = SP | TAB  | EOL
DELIM = (SPACE | EOL)*
EOF = !.
PLUS_OR_MINUS = PLUS | DASH
COMMENT = PERCENT+  (!EOL .)*  EOL DELIM

comment = COMMENT:x ~s(:comment, x)

SPACING = (SPACE | COMMENT)*

FALSE = 'false'
TRUE = 'true'
NULL = 'null'

INTEGER = ZERO | ONE_THROUGH_NINE DIGIT*

SIGNED_INTEGER = < PLUS_OR_MINUS? INTEGER > { text}

integer  = SIGNED_INTEGER:i ~s(:integer, i.to_i)

UNSIGNED_FLOAT = < INTEGER* PERIOD DIGIT* > { text }

float = < PLUS_OR_MINUS? UNSIGNED_FLOAT > ~s(:float, text.to_f)

unsigned_float = UNSIGNED_FLOAT:x ~s(:float,x.to_f)
root = pdfheader:h trailer:t ~pdf(h,t)

header = PERCENT "PDF" DASH UNSIGNED_FLOAT:x  ~s(:header, x.to_f)


# STRING 
STRBGN = '('
STREND = ')'
STR_ESC= '\\'

ESCPAREN = ( STR_ESC STRBGN |
	 STR_ESC STREND |
	 STR_ESC STR_ESC
	 )
string  = STRBGN STR*:x STREND { x }
STR = STR_ELEM STR | STR_ELEM

STRING_V = STR_ELEM STR
	 | STR_ELEM

STR_ELEM = < STR_PARTS+ STR > { text } |
	 < STR_PARTS+ > { text } |
	 '(' STR_ELEM:x  ')' { "(#{x})" } |
	 | STRBGN STREND { '()' }
	 
STR_PARTS = ((!STRBGN | !STREND | !STR_ESCAPE .) |
	  ESCPAREN |
	  STR_ESC .)
string_alphabet = 